
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from email import message
from pathlib import Path
import tkinter
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, Frame
import tkinter.messagebox
from administracion import Administracion
from crear_cuenta import CrearCuenta
from cliente import Cliente
from BDD.creando_bdd import create_connection
from BDD.consulta_usuario import validate_user, select_tipo_of_user

def select_usuario_by_username(conn, username):
    """
    Query all rows in the tasks table
    :param conn: the Connection object
    :param table: table name
    :return:
    """
    cur = conn.cursor()
    cur.execute(f"SELECT * FROM usuario WHERE username = '{username}'")

    rows = cur.fetchone()

    return rows

class Login(Toplevel):
    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / Path("./assets/login")

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)

    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.configure(bg="#FFFFFF")
        self.geometry("400x300")
        # Icono del programa
        self.iconbitmap(r'assets\cinemark.ico')
        # Titulo del programa
        self.title("Supermarket")
        self.create_widgets()

    def open_administracion(self):
        Administracion(self.master)

    def open_cliente(self):
        database = r"Cinemark.db"
            # create a database connection
        conn = create_connection(database)
        Cliente(self.master, select_usuario_by_username(conn, self.entry_usuario.get())[0])

    def elegir_ventana(self):
        if self.validate_login():
            database = r"Cinemark.db"
            # create a database connection
            conn = create_connection(database)
            if select_tipo_of_user(conn, self.entry_usuario.get()) == "admin":
                self.open_administracion()
            else:
                self.open_cliente()
        else:
            tkinter.messagebox.showinfo("Error", "Usuario o contraseña incorrectos")

    def validate_login(self):
        database = r"Cinemark.db"
        # create a database connection
        conn = create_connection(database)
        return validate_user(conn, self.entry_usuario.get(), self.entry_password.get())

    def open_crear_cuenta(self):
        CrearCuenta(self.master)

    def create_widgets(self):
        canvas = Canvas(
            self,
            bg="#FFFFFF",
            height=300,
            width=400,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_text(
            130.0,
            0.0,
            anchor="nw",
            text="Cinemark",
            fill="#11AC0E",
            font=("Inter Bold", 20 * -1)
        )

        canvas.create_text(
            161.0,
            44.0,
            anchor="nw",
            text="Login",
            fill="#000000",
            font=("Inter Bold", 20 * -1)
        )

        canvas.create_text(
            17.0,
            94.0,
            anchor="nw",
            text="nombre usuario: ",
            fill="#000000",
            font=("Inter Bold", 20 * -1)
        )

        canvas.create_text(
            17.0,
            143.0,
            anchor="nw",
            text="contraseña: ",
            fill="#000000",
            font=("Inter Bold", 20 * -1)
        )

        entry_image_usuario = PhotoImage( 
            file=self.relative_to_assets("entry_usuario.png"))
        entry_bg_usuario = canvas.create_image(
            274.5,
            107.0,
            image = entry_image_usuario
        )
        self.entry_usuario = Entry(
            self, 
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0
        )
        self.entry_usuario.place(
            x=188.0,
            y=94.0,
            width=173.0,
            height=24.0
        )

        entry_image_password = PhotoImage(
            file= self.relative_to_assets("entry_password.png"))
        entry_bg_password = canvas.create_image(
            274.5,
            154.0,
            image= entry_image_password
        )
        self.entry_password = Entry(
            self,
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0,
            show="*"
        )
        self.entry_password.place(
            x=188.0,
            y=141.0,
            width=173.0,
            height=24.0
        )

        button_image_ingresar = PhotoImage(
            file=self.relative_to_assets("button_ingresar.png"))
        button_ingresar = Button(
            self,
            image = button_image_ingresar,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.elegir_ventana(),
            relief="flat"
        )
        button_ingresar.place(
            x=130.0,
            y=199.0,
            width=107.0,
            height=37.0
        )

        canvas.create_text(
            9.0,
            274.0,
            anchor="nw",
            text="Si eres nuevo intenta ...",
            fill="#000000",
            font=("Inter Bold", 10 * -1)
        )

        button_image_crear_cuenta = PhotoImage(
            file= self.relative_to_assets("button_crear_cuenta.png"))
        button_crear_cuenta = Button(
            self,
            image = button_image_crear_cuenta,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.open_crear_cuenta(),
            relief="flat"
        )
        button_crear_cuenta.place(
            x=123.0,
            y=270.0,
            width=72.0,
            height=16.0
        )
        self.resizable(False, False)
        self.mainloop()


if __name__ == "__main__":
    app = Login(Tk())
    pass
