
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
from BDD.creando_bdd import create_connection
from BDD.actualizando_bdd import update_descuento


def select_descuento(conn):
    """
    Query all rows in the tasks table
    :param conn: the Connection object
    :param table: table name
    :return:
    """
    cur = conn.cursor()
    cur.execute("SELECT * FROM descuento")

    rows = cur.fetchall()

    return rows


def select_descuento_by_id(conn, id):
    """
    Query all rows in the tasks table
    :param conn: the Connection object
    :param table: table name
    :return:
    """
    cur = conn.cursor()
    cur.execute(f"SELECT * FROM descuento WHERE id_descuento = {id}")

    rows = cur.fetchall()

    return rows

class AdministracionModificarDescuento(Toplevel):
    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / \
        Path("./assets/administracion_modificar_descuento")

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)

    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.configure(bg="#FFFFFF")
        self.geometry("428x360")
        # Icono del programa
        self.iconbitmap(r'assets\cinemark.ico')
        # Titulo del programa
        self.title("Cinemark")
        self.create_widgets()

    def get_coloca_id(self):
        return self.entry_coloca_id.get()

    def get_dia(self):
        return self.entry_dia.get()

    def get_porcentaje(self):
        return self.entry_porcentaje.get()

    def set_dia(self, dia):
        self.entry_dia.delete(0, "end")
        self.entry_dia.insert(0, dia)

    def set_porcentaje(self, porcentaje):
        self.entry_porcentaje.delete(0, "end")
        self.entry_porcentaje.insert(0, porcentaje)

    def limpiar_busqueda(self):
        self.entry_resultado_busqueda.delete(1.0, "end")

    def limpiar_entradas(self):
        self.entry_coloca_id.delete(0, "end")
        self.entry_dia.delete(0, "end")
        self.entry_porcentaje.delete(0, "end")

    def cargar_datos_descuento(self):
        database = r"Cinemark.db"
        # create a database connection
        conn = create_connection(database)
        id = self.get_coloca_id()
        resultados = select_descuento_by_id(conn, id)
        self.set_dia(resultados[0][1])
        self.set_porcentaje(resultados[0][2])

    def mostrar_descuentos(self):
        database = r"Cinemark.db"
        # create a database connection
        conn = create_connection(database)
        descuentos = select_descuento(conn)
        for descuento in descuentos:
            self.entry_resultado_busqueda.insert(
                "insert", f" {descuento[0]} -- {descuento[1]} --  {descuento[2]}\n")

    def actualizar_descuento(self):
        database = r"Cinemark.db"
        conn = create_connection(database)
        cur = conn.cursor()
        update_descuento(conn, (self.get_dia(), self.get_porcentaje(), int(self.get_coloca_id())))
        self.limpiar_busqueda()
        self.mostrar_descuentos()

    def create_widgets(self):
        canvas = Canvas(
            self,
            bg = "#FFFFFF",
            height = 499,
            width = 428,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_text(
            131.0,
            5.0,
            anchor="nw",
            text="Cinemark",
            fill="#11AC0E",
            font=("Inter Bold", 20 * -1)
        )

        canvas.create_text(
            6.0,
            198.0,
            anchor="nw",
            text="Modificar Descuento: ",
            fill="#000000",
            font=("Inter Bold", 15 * -1)
        )


        canvas.create_text(
            16.0,
            268.0,
            anchor="nw",
            text="Porcentaje: ",
            fill="#000000",
            font=("Inter Bold", 15 * -1)
        )

        canvas.create_text(
            18.0,
            234.0,
            anchor="nw",
            text="Dia: ",
            fill="#000000",
            font=("Inter Bold", 15 * -1)
        )

        entry_image_1 = PhotoImage(
            file = self.relative_to_assets("entry_nombre_producto.png"))
        entry_bg_1 = canvas.create_image(
            170.0,
            242.5,
            image=entry_image_1
        )
        self.entry_dia = Entry(
            self,
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0
        )
        self.entry_dia.place(
            x=94.0,
            y=232.0,
            width=152.0,
            height=19.0
        )
        # self.entry_nombre_producto.insert(0, "nombre_producto")

        entry_image_3 = PhotoImage(
            file = self.relative_to_assets("entry_coloca_id.png"))
        entry_bg_3 = canvas.create_image(
            318.0,
            116.5,
            image=entry_image_3
        )
        self.entry_coloca_id = Entry(
            self,
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0
        )
        self.entry_coloca_id.place(
            x=242.0,
            y=106.0,
            width=152.0,
            height=19.0
        )
        # self.entry_coloca_id.insert(0, "coloca_id")

        entry_image_5 = PhotoImage(
            file = self.relative_to_assets("entry_stock_producto.png"))
        entry_bg_5 = canvas.create_image(
            176.0,
            272.5,
            image=entry_image_5
        )
        self.entry_porcentaje = Entry(
            self,
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0
        )
        self.entry_porcentaje.place(
            x=100.0,
            y=262.0,
            width=152.0,
            height=19.0
        )
        # self.entry_stock_producto.insert(0, "stock_producto")


        button_image_1 = PhotoImage(
            file = self.relative_to_assets("button_confirmar.png"))
        button_confirmar = Button(
            self,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.actualizar_descuento(),
            relief="flat"
        )
        button_confirmar.place(
            x=164.0,
            y=310.0,
            width=111.0,
            height=29.0
        )

        button_image_2 = PhotoImage(
            file = self.relative_to_assets("button_cargar.png"))
        button_cargar = Button(
            self,
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.cargar_datos_descuento(),
            relief="flat"
        )
        button_cargar.place(
            x=262.0,
            y=136.0,
            width=111.0,
            height=29.0
        )

        button_image_3 = PhotoImage(
            file = self.relative_to_assets("button_salir.png"))
        button_salir = Button(
            self,
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.destroy(),
            relief="flat"
        )
        button_salir.place(
            x=13.0,
            y=320.0,
            width=35.0,
            height=35.0
        )
        # Button Limpiar
        button_buscar = Button(
            self,
            text="Limpiar",
            command=lambda: self.limpiar_entradas(),
            relief="flat"
        )
        button_buscar.place(
            x=300.0,
            y=250.0,
            width=50.00,
            height=29.0
        )

        canvas.create_text(
            18.0,
            35.0,
            anchor="nw",
            text="  ID --   Dia   --  Porcentaje",
            fill="#000000",
            font=("Inter Bold", 15 * -1)
        )

        canvas.create_text(
            266.0,
            79.0,
            anchor="nw",
            text="Coloca su ID:",
            fill="#000000",
            font=("Inter Bold", 15 * -1)
        )

        entry_image_9 = PhotoImage(
            file = self.relative_to_assets("entry_resultado_busqueda.png"))
        entry_bg_9 = canvas.create_image(
            113.5,
            127.0,
            image=entry_image_9
        )
        self.entry_resultado_busqueda = Text(
            self,
            bd=0,
            bg="#D9D9D9",
            highlightthickness=0
        )
        self.entry_resultado_busqueda.place(
            x=13.0,
            y=66.0,
            width=201.0,
            height=120.0
        )
        # self.entry_resultado_busqueda.insert("insert", "resultados_busqueda")

        self.mostrar_descuentos()
        self.resizable(False, False)
        self.mainloop()


if __name__ == "__main__":
    # app = AdministracionModificarDescuento()
    pass
